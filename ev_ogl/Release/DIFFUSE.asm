; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\levolver\yonkang-sefit\levolver\ev_ogl\DIFFUSE.C
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_edge_diffusion_attr:DWORD
COMM	_facet_diffusion_attr:DWORD
_DATA	ENDS
PUBLIC	_get_fe_facet
EXTRN	_web:BYTE
EXTRN	_NULLFACET:DWORD
; Function compile flags: /Ogtp
; File c:\levolver\yonkang-sefit\levolver\ev_ogl\inline.h
;	COMDAT _get_fe_facet
_TEXT	SEGMENT
_fe_id$ = 8						; size = 4
_get_fe_facet PROC					; COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp

; 59   :   facet_id f_id;
; 60   :   
; 61   :   if ( !valid_id(fe_id) ) return NULLFACET;

	mov	ecx, DWORD PTR _fe_id$[ebp]
	test	ecx, 268435456				; 10000000H
	jne	SHORT $LN2@get_fe_fac
	mov	eax, DWORD PTR _NULLFACET

; 64   :   return f_id;
; 65   : }

	pop	ebp
	ret	0
$LN2@get_fe_fac:

; 62   :   f_id = feptr(fe_id)->fe_facet_id;

	mov	edx, DWORD PTR _web+460
	mov	eax, ecx
	and	eax, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+eax*4]
	mov	eax, DWORD PTR [eax+24]

; 63   :   if ( inverted(fe_id) ) invert(f_id);

	test	ecx, 134217728				; 08000000H
	je	SHORT $LN3@get_fe_fac
	xor	eax, 134217728				; 08000000H
$LN3@get_fe_fac:

; 64   :   return f_id;
; 65   : }

	pop	ebp
	ret	0
_get_fe_facet ENDP
_TEXT	ENDS
PUBLIC	_get_next_facet
; Function compile flags: /Ogtp
;	COMDAT _get_next_facet
_TEXT	SEGMENT
_fe_id$ = 8						; size = 4
_get_next_facet PROC					; COMDAT

; 92   : {

	push	ebp
	mov	ebp, esp

; 93   :   if ( inverted(fe_id) ) 

	mov	eax, DWORD PTR _fe_id$[ebp]

; 94   :     return inverse_id(feptr(fe_id)->nextfacet[0]);

	mov	ecx, DWORD PTR _web+460
	test	eax, 134217728				; 08000000H
	je	SHORT $LN2@get_next_f
	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+36]
	xor	eax, 134217728				; 08000000H

; 97   : }

	pop	ebp
	ret	0
$LN2@get_next_f:

; 95   :   else 
; 96   :     return feptr(fe_id)->nextfacet[1];

	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR [edx+40]

; 97   : }

	pop	ebp
	ret	0
_get_next_facet ENDP
_TEXT	ENDS
PUBLIC	_get_edge_fe
; Function compile flags: /Ogtp
;	COMDAT _get_edge_fe
_TEXT	SEGMENT
_e_id$ = 8						; size = 4
_get_edge_fe PROC					; COMDAT

; 179  : {   struct edge *ep;

	push	ebp
	mov	ebp, esp

; 180  :     facetedge_id fe;
; 181  : 
; 182  :  	ep = eptr(e_id);

	mov	ecx, DWORD PTR _e_id$[ebp]
	mov	edx, DWORD PTR _web+124
	mov	eax, ecx
	and	eax, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+eax*4]

; 183  :     if ( !ep ) return NULLID;

	test	eax, eax
	jne	SHORT $LN2@get_edge_f

; 186  :     return fe;
; 187  : }

	pop	ebp
	ret	0
$LN2@get_edge_f:

; 184  :     fe = ep->fe_id; 

	mov	eax, DWORD PTR [eax+28]

; 185  :     if ( inverted(e_id) ) invert(fe);

	test	ecx, 134217728				; 08000000H
	je	SHORT $LN3@get_edge_f
	xor	eax, 134217728				; 08000000H
$LN3@get_edge_f:

; 186  :     return fe;
; 187  : }

	pop	ebp
	ret	0
_get_edge_fe ENDP
_TEXT	ENDS
PUBLIC	_get_facet_body
EXTRN	_dymem:DWORD
; Function compile flags: /Ogtp
;	COMDAT _get_facet_body
_TEXT	SEGMENT
_f_id$ = 8						; size = 4
_get_facet_body PROC					; COMDAT

; 250  : {

	push	ebp
	mov	ebp, esp

; 251  :   if ( web.skel[BODY].count == 0 ) return NULLID;

	cmp	DWORD PTR _web+400, 0
	jne	SHORT $LN4@get_facet_
$LN7@get_facet_:
	xor	eax, eax

; 255  : }

	pop	ebp
	ret	0
$LN4@get_facet_:

; 252  :   if ( !valid_id(f_id) ) return NULLID;

	mov	eax, DWORD PTR _f_id$[ebp]
	test	eax, 268435456				; 10000000H
	je	SHORT $LN7@get_facet_

; 253  :   if ( inverted(f_id) ) return F_ELID(f_id,F_BODY_LIST_ATTR)[1];

	mov	ecx, DWORD PTR _web+236
	test	eax, 134217728				; 08000000H
	je	SHORT $LN2@get_facet_
	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _web+328
	mov	ecx, DWORD PTR _dymem
	mov	eax, DWORD PTR [eax+ecx+784]
	mov	eax, DWORD PTR [edx+eax+4]

; 255  : }

	pop	ebp
	ret	0
$LN2@get_facet_:

; 254  :   else  return F_ELID(f_id,F_BODY_LIST_ATTR)[0];

	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _web+328
	mov	ecx, DWORD PTR _dymem
	mov	eax, DWORD PTR [eax+ecx+784]
	mov	eax, DWORD PTR [edx+eax]

; 255  : }

	pop	ebp
	ret	0
_get_facet_body ENDP
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	_get_body_fixvol
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT _get_body_fixvol
_TEXT	SEGMENT
_b_id$ = 8						; size = 4
_get_body_fixvol PROC					; COMDAT

; 311  :      { return ( valid_id(b_id) ?  bptr(b_id)->fixvol : 0.0 ) ; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _b_id$[ebp]
	test	eax, 268435456				; 10000000H
	je	SHORT $LN3@get_body_f
	mov	ecx, DWORD PTR _web+348
	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	fld	QWORD PTR [edx+32]
	pop	ebp
	ret	0
$LN3@get_body_f:
	fldz
	pop	ebp
	ret	0
_get_body_fixvol ENDP
_TEXT	ENDS
PUBLIC	_get_body_pressure
; Function compile flags: /Ogtp
;	COMDAT _get_body_pressure
_TEXT	SEGMENT
_b_id$ = 8						; size = 4
_get_body_pressure PROC					; COMDAT

; 317  :     { return  ( valid_id(b_id) ?    bptr(b_id)->pressure : 0.0 ) ; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _b_id$[ebp]
	test	eax, 268435456				; 10000000H
	je	SHORT $LN3@get_body_p
	mov	ecx, DWORD PTR _web+348
	and	eax, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+eax*4]
	fld	QWORD PTR [edx+312]
	pop	ebp
	ret	0
$LN3@get_body_p:
	fldz
	pop	ebp
	ret	0
_get_body_pressure ENDP
_TEXT	ENDS
PUBLIC	_get_extra
; Function compile flags: /Ogtp
;	COMDAT _get_extra
_TEXT	SEGMENT
_id$ = 8						; size = 4
_n$ = 12						; size = 4
_get_extra PROC						; COMDAT

; 348  : { int type = id_type(id);

	push	ebp
	mov	ebp, esp

; 349  : 
; 350  :   return ( (char*)elptr(id) + EXTRAS(type)[n].offset);

	mov	ecx, DWORD PTR _id$[ebp]
	mov	eax, ecx
	push	esi
	mov	esi, DWORD PTR _n$[ebp]
	shr	eax, 29					; 0000001dH
	imul	esi, 240				; 000000f0H
	imul	eax, 112				; 00000070H
	mov	edx, DWORD PTR _web[eax+12]
	push	edi
	mov	edi, DWORD PTR _web[eax+104]
	and	ecx, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _dymem
	add	edi, esi
	add	eax, DWORD PTR [edi+ecx+64]
	pop	edi
	pop	esi

; 351  : }

	pop	ebp
	ret	0
_get_extra ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@GAFDKJNC@facet_diffusion?$AA@		; `string'
PUBLIC	??_C@_0P@CJLLNOHI@edge_diffusion?$AA@		; `string'
PUBLIC	_diffuse
EXTRN	_recalc_facet_area:PROC
EXTRN	_set_body_fixvol:PROC
EXTRN	_get_edge_length:PROC
EXTRN	_NULLBODY:DWORD
EXTRN	_find_attribute:PROC
;	COMDAT ??_C@_0BA@GAFDKJNC@facet_diffusion?$AA@
CONST	SEGMENT
??_C@_0BA@GAFDKJNC@facet_diffusion?$AA@ DB 'facet_diffusion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CJLLNOHI@edge_diffusion?$AA@
CONST	SEGMENT
??_C@_0P@CJLLNOHI@edge_diffusion?$AA@ DB 'edge_diffusion', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\levolver\yonkang-sefit\levolver\ev_ogl\diffuse.c
CONST	ENDS
;	COMDAT _diffuse
_TEXT	SEGMENT
_mass$ = -28						; size = 8
_coeff$ = -28						; size = 8
_pressure$ = -20					; size = 8
_bb_id$ = -12						; size = 4
_b_id$ = -8						; size = 4
tv770 = -4						; size = 4
_e_id$ = -4						; size = 4
_diffuse PROC						; COMDAT

; 25   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 26   :   edge_id e_id;
; 27   :   facet_id f_id;
; 28   :   facetedge_id fe_id;
; 29   :   body_id b_id,bb_id;
; 30   :   REAL pressure;
; 31   :   REAL mass;
; 32   :   REAL coeff;
; 33   : 
; 34   :   if ( web.representation == STRING )

	cmp	DWORD PTR _web+624, 1
	push	ebx
	push	esi
	push	edi
	jne	$LN29@diffuse

; 35   :   { edge_diffusion_attr = find_attribute(EDGE,DIFFUSE_EATTR_NAME);

	push	OFFSET ??_C@_0P@CJLLNOHI@edge_diffusion?$AA@
	push	1
	call	_find_attribute

; 36   :     FOR_ALL_EDGES(e_id)

	mov	esi, DWORD PTR _web+160
	add	esp, 8
	mov	DWORD PTR _edge_diffusion_attr, eax
	mov	DWORD PTR _e_id$[ebp], esi
	test	esi, 268435456				; 10000000H
	je	$LN11@diffuse
	jmp	SHORT $LN28@diffuse
$LL96@diffuse:
	mov	esi, DWORD PTR _e_id$[ebp]
$LN28@diffuse:
	mov	eax, DWORD PTR _web+124
	mov	ebx, esi
	and	ebx, 134217727				; 07ffffffH
	add	ebx, ebx
	add	ebx, ebx
	mov	ecx, DWORD PTR [ebx+eax]
	mov	eax, DWORD PTR [ecx+8]
	and	eax, 1
	xor	edx, edx
	or	eax, edx
	je	$LN27@diffuse

; 37   :     { fe_id = get_edge_fe(e_id);

	test	ecx, ecx
	jne	SHORT $LN33@diffuse
	xor	esi, esi
	jmp	SHORT $LN34@diffuse
$LN33@diffuse:
	mov	ecx, DWORD PTR [ecx+28]
	test	esi, 134217728				; 08000000H
	je	SHORT $LN32@diffuse
	xor	ecx, 134217728				; 08000000H
$LN32@diffuse:
	mov	esi, ecx
$LN34@diffuse:

; 38   :       if ( !valid_id(fe_id) ) return;

	test	esi, 268435456				; 10000000H
	je	$LN11@diffuse

; 39   :       b_id = get_facet_body(get_fe_facet(fe_id));

	mov	edi, DWORD PTR _web+460
	mov	ecx, esi
	and	ecx, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [edi+ecx*4]
	mov	eax, DWORD PTR [edx+24]
	test	esi, 134217728				; 08000000H
	je	SHORT $LN36@diffuse
	xor	eax, 134217728				; 08000000H
$LN36@diffuse:
	push	eax
	call	_get_facet_body
	add	esp, 4

; 40   :       if ( !valid_id(b_id) ) invert(fe_id);

	test	eax, 268435456				; 10000000H
	jne	SHORT $LN98@diffuse
	xor	esi, 134217728				; 08000000H
$LN98@diffuse:

; 41   :       b_id = get_facet_body(get_fe_facet(fe_id));

	test	esi, 268435456				; 10000000H
	jne	SHORT $LN41@diffuse
	mov	eax, DWORD PTR _NULLFACET
	jmp	SHORT $LN40@diffuse
$LN41@diffuse:
	mov	eax, esi
	and	eax, 134217727				; 07ffffffH
	mov	ecx, DWORD PTR [edi+eax*4]
	mov	eax, DWORD PTR [ecx+24]
	test	esi, 134217728				; 08000000H
	je	SHORT $LN40@diffuse
	xor	eax, 134217728				; 08000000H
$LN40@diffuse:
	push	eax
	call	_get_facet_body
	add	esp, 4
	mov	DWORD PTR _b_id$[ebp], eax

; 42   :       if ( !valid_id(b_id) ) continue;

	test	eax, 268435456				; 10000000H
	je	$LN27@diffuse

; 43   :       pressure = get_body_pressure(b_id);

	mov	edx, DWORD PTR _web+348
	mov	edi, eax
	and	edi, 134217727				; 07ffffffH
	add	edi, edi
	add	edi, edi
	mov	eax, DWORD PTR [edi+edx]
	fld	QWORD PTR [eax+312]

; 44   :        
; 45   :       if ( !equal_id(fe_id,get_next_facet(fe_id)) )

	mov	eax, DWORD PTR _web+460
	mov	edx, esi
	fstp	QWORD PTR _pressure$[ebp]
	mov	ecx, esi
	shr	edx, 27					; 0000001bH
	and	ecx, 134217727				; 07ffffffH
	and	edx, 1
	mov	eax, DWORD PTR [eax+ecx*4]
	je	SHORT $LN49@diffuse
	mov	ecx, DWORD PTR [eax+36]
	xor	ecx, 134217728				; 08000000H
	jmp	SHORT $LN48@diffuse
$LN49@diffuse:
	mov	ecx, DWORD PTR [eax+40]
$LN48@diffuse:
	cmp	esi, ecx
	je	SHORT $LN20@diffuse

; 46   :       { fe_id = get_next_facet(fe_id);

	test	edx, edx
	je	SHORT $LN53@diffuse
	mov	esi, DWORD PTR [eax+36]
	xor	esi, 134217728				; 08000000H
	jmp	SHORT $LN52@diffuse
$LN53@diffuse:
	mov	esi, DWORD PTR [eax+40]
$LN52@diffuse:

; 47   :         bb_id = get_facet_body(get_fe_facet(fe_id));

	push	esi
	call	_get_fe_facet
	push	eax
	call	_get_facet_body
	add	esp, 8

; 48   :         if ( !valid_id(bb_id) ) invert(fe_id);

	test	eax, 268435456				; 10000000H
	jne	SHORT $LN19@diffuse
	xor	esi, 134217728				; 08000000H
$LN19@diffuse:

; 49   :         bb_id = get_facet_body(get_fe_facet(fe_id));

	push	esi
	call	_get_fe_facet
	push	eax
	call	_get_facet_body
	mov	esi, eax
	add	esp, 8

; 50   :         pressure -= get_body_pressure(bb_id);

	test	esi, 268435456				; 10000000H
	je	SHORT $LN58@diffuse
	mov	edx, DWORD PTR _web+348
	mov	ecx, esi
	and	ecx, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+ecx*4]
	fld	QWORD PTR [eax+312]
	fsubr	QWORD PTR _pressure$[ebp]
	fstp	QWORD PTR _pressure$[ebp]
	jmp	SHORT $LN18@diffuse
$LN58@diffuse:
	fldz
	fsubr	QWORD PTR _pressure$[ebp]
	fstp	QWORD PTR _pressure$[ebp]
	jmp	SHORT $LN18@diffuse
$LN20@diffuse:

; 51   :       }
; 52   :       else bb_id = NULLBODY;

	mov	esi, DWORD PTR _NULLBODY
$LN18@diffuse:

; 53   :       if ( edge_diffusion_attr >= 0 )

	mov	ecx, DWORD PTR _edge_diffusion_attr
	test	ecx, ecx
	js	SHORT $LN17@diffuse

; 54   :          coeff = *(REAL*)get_extra(e_id,edge_diffusion_attr);

	mov	eax, DWORD PTR _e_id$[ebp]
	imul	ecx, 240				; 000000f0H
	shr	eax, 29					; 0000001dH
	imul	eax, 112				; 00000070H
	mov	edx, DWORD PTR _web[eax+104]
	mov	eax, DWORD PTR _web[eax+12]
	mov	eax, DWORD PTR [eax+ebx]
	add	edx, ecx
	mov	ecx, DWORD PTR _dymem
	mov	edx, DWORD PTR [edx+ecx+64]
	fld	QWORD PTR [edx+eax]
	jmp	SHORT $LN106@diffuse
$LN17@diffuse:

; 55   :       else coeff = web.diffusion_const; 

	fld	QWORD PTR _web+784
$LN106@diffuse:

; 56   :       mass = web.scale*coeff*pressure*get_edge_length(e_id);

	mov	ecx, DWORD PTR _e_id$[ebp]
	fstp	QWORD PTR _coeff$[ebp]
	push	ecx
	call	_get_edge_length
	fld	QWORD PTR _web+1512
	fmul	QWORD PTR _coeff$[ebp]

; 57   :       set_body_fixvol(b_id,get_body_fixvol(b_id)-mass);

	mov	edx, DWORD PTR _web+348
	mov	eax, DWORD PTR [edi+edx]
	push	ecx
	fmul	QWORD PTR _pressure$[ebp]
	mov	ecx, DWORD PTR _b_id$[ebp]
	fmulp	ST(1), ST(0)
	fst	QWORD PTR _mass$[ebp]
	fsubr	QWORD PTR [eax+32]
	fstp	QWORD PTR [esp]
	push	ecx
	call	_set_body_fixvol
	add	esp, 12					; 0000000cH

; 58   :       if ( valid_id(bb_id) )

	test	esi, 268435456				; 10000000H
	je	SHORT $LN27@diffuse

; 59   :         set_body_fixvol(bb_id,get_body_fixvol(bb_id)+mass);

	mov	eax, DWORD PTR _web+348
	mov	edx, esi
	and	edx, 134217727				; 07ffffffH
	mov	ecx, DWORD PTR [eax+edx*4]
	fld	QWORD PTR [ecx+32]
	sub	esp, 8
	fadd	QWORD PTR _mass$[ebp]
	fstp	QWORD PTR [esp]
	push	esi
	call	_set_body_fixvol
	add	esp, 12					; 0000000cH
$LN27@diffuse:

; 36   :     FOR_ALL_EDGES(e_id)

	mov	edx, DWORD PTR _web+124
	mov	eax, DWORD PTR [ebx+edx]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _e_id$[ebp], eax
	test	eax, 268435456				; 10000000H
	jne	$LL96@diffuse
	pop	edi
	pop	esi
	pop	ebx

; 84   :     }
; 85   :   }
; 86   : } /* end diffuse() */

	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@diffuse:

; 60   :     }
; 61   :   } /* end STRING */
; 62   :   else
; 63   :   { facet_diffusion_attr = find_attribute(FACET,DIFFUSE_FATTR_NAME);

	push	OFFSET ??_C@_0BA@GAFDKJNC@facet_diffusion?$AA@
	push	2
	call	_find_attribute

; 64   :     FOR_ALL_FACETS(f_id)

	mov	edi, DWORD PTR _web+272
	add	esp, 8
	mov	DWORD PTR _facet_diffusion_attr, eax
	test	edi, 268435456				; 10000000H
	je	$LN11@diffuse
$LL13@diffuse:
	mov	ecx, DWORD PTR _web+236
	mov	esi, edi
	and	esi, 134217727				; 07ffffffH
	add	esi, esi
	add	esi, esi
	mov	eax, DWORD PTR [esi+ecx]
	mov	eax, DWORD PTR [eax+8]
	and	eax, 1
	xor	ecx, ecx
	or	eax, ecx
	je	$LN12@diffuse

; 65   :     { pressure = 0.0;
; 66   :       b_id = get_facet_body(f_id);

	push	edi
	call	_get_facet_body

; 67   :       if ( valid_id(b_id) ) 

	mov	ebx, eax
	shr	ebx, 28					; 0000001cH
	add	esp, 4
	and	ebx, 1
	mov	DWORD PTR _b_id$[ebp], eax
	je	SHORT $LN8@diffuse

; 68   :        pressure = get_body_pressure(b_id);

	mov	edx, DWORD PTR _web+348
	and	eax, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+eax*4]
	fld	QWORD PTR [eax+312]
	jmp	SHORT $LN107@diffuse
$LN8@diffuse:

; 69   :       else pressure = web.pressure;

	fld	QWORD PTR _web+1536
$LN107@diffuse:

; 70   :           
; 71   :       bb_id = get_facet_body(inverse_id(f_id));

	mov	ecx, edi
	fstp	QWORD PTR _pressure$[ebp]
	xor	ecx, 134217728				; 08000000H
	push	ecx
	call	_get_facet_body

; 72   :       if ( valid_id(bb_id) )
; 73   :           pressure -= get_body_pressure(bb_id);

	fld	QWORD PTR _pressure$[ebp]
	mov	ecx, eax
	shr	ecx, 28					; 0000001cH
	add	esp, 4
	and	ecx, 1
	mov	DWORD PTR _bb_id$[ebp], eax
	mov	DWORD PTR tv770[ebp], ecx
	je	SHORT $LN6@diffuse
	mov	edx, DWORD PTR _web+348
	and	eax, 134217727				; 07ffffffH
	mov	eax, DWORD PTR [edx+eax*4]
	fsub	QWORD PTR [eax+312]
	jmp	SHORT $LN108@diffuse
$LN6@diffuse:

; 74   :       else pressure -= web.pressure;

	fsub	QWORD PTR _web+1536
$LN108@diffuse:

; 75   :       if ( facet_diffusion_attr >= 0 )

	mov	ecx, DWORD PTR _facet_diffusion_attr
	fstp	QWORD PTR _pressure$[ebp]
	test	ecx, ecx
	js	SHORT $LN4@diffuse

; 76   :          coeff = *(REAL*)get_extra(f_id,facet_diffusion_attr);

	mov	eax, edi
	imul	ecx, 240				; 000000f0H
	shr	eax, 29					; 0000001dH
	imul	eax, 112				; 00000070H
	mov	edx, DWORD PTR _web[eax+104]
	mov	eax, DWORD PTR _web[eax+12]
	mov	eax, DWORD PTR [eax+esi]
	add	edx, ecx
	mov	ecx, DWORD PTR _dymem
	mov	edx, DWORD PTR [edx+ecx+64]
	fld	QWORD PTR [edx+eax]
	jmp	SHORT $LN109@diffuse
$LN4@diffuse:

; 77   :       else coeff = web.diffusion_const; 

	fld	QWORD PTR _web+784
$LN109@diffuse:

; 78   :           
; 79   :       mass = web.scale*coeff*pressure*get_facet_area(f_id);

	push	edi
	fstp	QWORD PTR _coeff$[ebp]
	call	_recalc_facet_area
	fld	QWORD PTR _web+1512
	fmul	QWORD PTR _coeff$[ebp]
	mov	ecx, DWORD PTR _web+236
	mov	edx, DWORD PTR [esi+ecx]
	add	esp, 4
	fmul	QWORD PTR _pressure$[ebp]
	fmul	QWORD PTR [edx+40]
	fst	QWORD PTR _mass$[ebp]

; 80   :       if ( valid_id(b_id) )

	test	ebx, ebx
	je	SHORT $LN95@diffuse

; 81   :          set_body_fixvol(b_id,get_body_fixvol(b_id)-mass);

	mov	eax, DWORD PTR _b_id$[ebp]
	mov	edx, DWORD PTR _web+348
	mov	ecx, eax
	and	ecx, 134217727				; 07ffffffH
	mov	ecx, DWORD PTR [edx+ecx*4]
	fsubr	QWORD PTR [ecx+32]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	eax
	call	_set_body_fixvol
	fld	QWORD PTR _mass$[ebp]
	add	esp, 12					; 0000000cH
$LN95@diffuse:

; 82   :       if ( valid_id(bb_id) )

	cmp	DWORD PTR tv770[ebp], 0
	je	SHORT $LN104@diffuse

; 83   :          set_body_fixvol(bb_id,get_body_fixvol(bb_id)+mass);

	mov	eax, DWORD PTR _bb_id$[ebp]
	mov	ecx, DWORD PTR _web+348
	mov	edx, eax
	and	edx, 134217727				; 07ffffffH
	mov	edx, DWORD PTR [ecx+edx*4]
	fadd	QWORD PTR [edx+32]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	eax
	call	_set_body_fixvol
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN12@diffuse
$LN104@diffuse:
	fstp	ST(0)
$LN12@diffuse:

; 64   :     FOR_ALL_FACETS(f_id)

	mov	eax, DWORD PTR _web+236
	mov	ecx, DWORD PTR [esi+eax]
	mov	edi, DWORD PTR [ecx]
	test	edi, 268435456				; 10000000H
	jne	$LL13@diffuse
$LN11@diffuse:
	pop	edi
	pop	esi
	pop	ebx

; 84   :     }
; 85   :   }
; 86   : } /* end diffuse() */

	mov	esp, ebp
	pop	ebp
	ret	0
_diffuse ENDP
_TEXT	ENDS
END
